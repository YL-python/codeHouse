#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
int f[35][35];

int main() {
	// n 个人传 m次 
	int n, m;
	cin >> n >> m;
	menset(f, 0, sizeof(f));
	
	// 传了 0 次  在 1 手上 
	f[0][1] = 1; 
	for(int i=1;i<=m;i++){
		for(int j=1;j<=n;j++){
			if(j == 1){
				// 1 号是 n号或者 2号传过来的 
				f[i][j] = f[i-1][2] + f[i-1][n];
			} else if(j == n){
				// n 号是 1号或者 n-1号传过来的 
				f[i][j] = f[i-1][1] + f[i-1][n-1];
			}else{
				f[i][j] = f[i-1]j+1] + f[i-1][j-1];
			}
		}
	} 
	cout << f[m][1] << endl;
	return 0;
}
/*
工作空闲之余，蒜头君经常带着同事们做游戏，最
近蒜头君发明了-个好玩的新游戏: n位同事围成
一个圈，同事A手里拿着-个兔妮妮的娃娃。蒜头
君喊游戏开始，每位手里拿着娃娃的同事可以选择
将娃娃传给左边或者右边的同学，当蒜头君喊游戏
结束时，停止传娃娃。此时手里拿着娃娃的同事即
是败者。
玩了几轮之后，蒜头君想到- - 个问题:有多少种不
同的方法，使得从同事A开始传娃娃，传了m次
之后又回到了同事A手里。两种方法，如果接娃娃
的同事不同，或者接娃娃的顺序不同均视为不同的
方法。例如1->2->3->1和
1->3->2->1是两种不同的方法。

3 3
2
*/ 
