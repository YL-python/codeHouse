#include <iostream>
using namespace std;
int ans = 0;

// 第 k类型的牌 ，一共给出了cnt个空间 
void f(int k,int cnt){
	if(k>13 || cnt > 13){
		return ;
	}
	if(k == 13 && cnt == 13){
		ans++;
		return;
	}
	for(int i=0;i<5;i++){ // 第 k 张牌给 0，1，2，3，4 个 空间 
		f(k+1, cnt+i);
	}
} 

int main() {
	// 13种牌型
	// 第一张牌给 0个空间 
	f(0, 0);
	// 时间复杂度是 5 的13 次方 
	cout << ans << endl;
	return 0;
}

/*

牌型种数

小明被劫持到X赌城，被迫与其他3人玩牌。
一副扑克牌（去掉大小王牌，共52张），均匀发给4个人，每个人13张。
这时，小明脑子里突然冒出一个问题：
如果不考虑花色，只考虑点数，也不考虑自己得到的牌的先后顺序，自己
手里能拿到的初始牌型组合一共有多少种呢？

请填写该整数，不要填写任何多余的内容或说明文字。

*/

